// automatically generated by the FlatBuffers compiler, do not modify



use crate::pod_state_generated::*;
use std::mem;
use std::cmp::Ordering;

extern crate flatbuffers;
use self::flatbuffers::EndianScalar;

#[allow(unused_imports, dead_code)]
pub mod wloop {

  use crate::pod_state_generated::*;
  use std::mem;
  use std::cmp::Ordering;

  extern crate flatbuffers;
  use self::flatbuffers::EndianScalar;

pub enum UdpDesktopMessageOffset {}
#[derive(Copy, Clone, Debug, PartialEq)]

pub struct UdpDesktopMessage<'a> {
  pub _tab: flatbuffers::Table<'a>,
}

impl<'a> flatbuffers::Follow<'a> for UdpDesktopMessage<'a> {
    type Inner = UdpDesktopMessage<'a>;
    #[inline]
    fn follow(buf: &'a [u8], loc: usize) -> Self::Inner {
        Self {
            _tab: flatbuffers::Table { buf: buf, loc: loc },
        }
    }
}

impl<'a> UdpDesktopMessage<'a> {
    #[inline]
    pub fn init_from_table(table: flatbuffers::Table<'a>) -> Self {
        UdpDesktopMessage {
            _tab: table,
        }
    }
    #[allow(unused_mut)]
    pub fn create<'bldr: 'args, 'args: 'mut_bldr, 'mut_bldr>(
        _fbb: &'mut_bldr mut flatbuffers::FlatBufferBuilder<'bldr>,
        args: &'args UdpDesktopMessageArgs) -> flatbuffers::WIPOffset<UdpDesktopMessage<'bldr>> {
      let mut builder = UdpDesktopMessageBuilder::new(_fbb);
      builder.add_most_recent_timestamp(args.most_recent_timestamp);
      builder.add_requested_state(args.requested_state);
      builder.finish()
    }

    pub const VT_REQUESTED_STATE: flatbuffers::VOffsetT = 4;
    pub const VT_MOST_RECENT_TIMESTAMP: flatbuffers::VOffsetT = 6;

  #[inline]
  pub fn requested_state(&self) -> PodState {
    self._tab.get::<PodState>(UdpDesktopMessage::VT_REQUESTED_STATE, Some(PodState::Resting)).unwrap()
  }
  #[inline]
  pub fn most_recent_timestamp(&self) -> i64 {
    self._tab.get::<i64>(UdpDesktopMessage::VT_MOST_RECENT_TIMESTAMP, Some(0)).unwrap()
  }
}

pub struct UdpDesktopMessageArgs {
    pub requested_state: PodState,
    pub most_recent_timestamp: i64,
}
impl<'a> Default for UdpDesktopMessageArgs {
    #[inline]
    fn default() -> Self {
        UdpDesktopMessageArgs {
            requested_state: PodState::Resting,
            most_recent_timestamp: 0,
        }
    }
}
pub struct UdpDesktopMessageBuilder<'a: 'b, 'b> {
  fbb_: &'b mut flatbuffers::FlatBufferBuilder<'a>,
  start_: flatbuffers::WIPOffset<flatbuffers::TableUnfinishedWIPOffset>,
}
impl<'a: 'b, 'b> UdpDesktopMessageBuilder<'a, 'b> {
  #[inline]
  pub fn add_requested_state(&mut self, requested_state: PodState) {
    self.fbb_.push_slot::<PodState>(UdpDesktopMessage::VT_REQUESTED_STATE, requested_state, PodState::Resting);
  }
  #[inline]
  pub fn add_most_recent_timestamp(&mut self, most_recent_timestamp: i64) {
    self.fbb_.push_slot::<i64>(UdpDesktopMessage::VT_MOST_RECENT_TIMESTAMP, most_recent_timestamp, 0);
  }
  #[inline]
  pub fn new(_fbb: &'b mut flatbuffers::FlatBufferBuilder<'a>) -> UdpDesktopMessageBuilder<'a, 'b> {
    let start = _fbb.start_table();
    UdpDesktopMessageBuilder {
      fbb_: _fbb,
      start_: start,
    }
  }
  #[inline]
  pub fn finish(self) -> flatbuffers::WIPOffset<UdpDesktopMessage<'a>> {
    let o = self.fbb_.end_table(self.start_);
    flatbuffers::WIPOffset::new(o.value())
  }
}

}  // pub mod Wloop

